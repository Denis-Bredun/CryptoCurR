<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lottie="clr-namespace:LottieSharp.WPF;assembly=LottieSharp">
    
    <Style x:Key="BaseTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="BaseStackPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <Style x:Key="BaseImage" TargetType="Image">
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
        <Setter Property="Margin" Value="{StaticResource ButtonMargin}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThickness}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource ButtonCornerRadius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonHoverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ButtonDisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonDisabledBorder}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TertiaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBorder}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextBoxBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryBorder}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ListViewBorderThickness}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="{StaticResource ListItemPadding}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Bd" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="{StaticResource HeaderFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource HeaderPadding}"/>
    </Style>

    <Style x:Key="PageNumberTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Margin" Value="{StaticResource PageNumberMargin}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="{StaticResource PageNumberFontSize}"/>
    </Style>

    <Style x:Key="LoadingOverlayBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource LoadingOverlay}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Panel.ZIndex" Value="{StaticResource LoadingOverlayZIndex}"/>
    </Style>

    <Style x:Key="SearchPanel" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="Margin" Value="{StaticResource SearchPanelMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="HeaderGrid" TargetType="Grid">
        <Setter Property="Margin" Value="{StaticResource HeaderGridMargin}"/>
        <Setter Property="Background" Value="{StaticResource HeaderBackground}"/>
    </Style>

    <Style x:Key="PaginationPanel" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource PaginationPanelMargin}"/>
    </Style>

    <Style x:Key="MainGrid" TargetType="Grid">
        <Setter Property="Margin" Value="{StaticResource MainGridMargin}"/>
    </Style>

    <Style x:Key="MainContentContainer" TargetType="Grid">
        <Setter Property="MaxWidth" Value="{StaticResource MainContentMaxWidth}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource MainGridMargin}"/>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Width" Value="{StaticResource SearchTextBoxWidth}"/>
    </Style>

    <Style x:Key="CoinIcon" TargetType="Image" BasedOn="{StaticResource BaseImage}">
        <Setter Property="Width" Value="{StaticResource CoinIconSize}"/>
        <Setter Property="Height" Value="{StaticResource CoinIconSize}"/>
    </Style>

    <Style x:Key="CoinNameTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="CoinSymbolTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="CoinPriceTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="CoinChangeTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="CoinMarketCapTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="CoinRankTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LoadingAnimation" TargetType="lottie:LottieAnimationView">
        <Setter Property="RepeatCount" Value="-1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="{StaticResource LoadingAnimationSize}"/>
        <Setter Property="Height" Value="{StaticResource LoadingAnimationSize}"/>
    </Style>

    <Style x:Key="PaginationSeparator" TargetType="Separator">
        <Setter Property="Width" Value="{StaticResource PaginationSeparatorWidth}"/>
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <Style x:Key="MainWindow" TargetType="Window">
        <Setter Property="Title" Value="CryptoCurR"/>
        <Setter Property="Height" Value="{StaticResource MainWindowHeight}"/>
        <Setter Property="Width" Value="{StaticResource MainWindowWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource MainContentMinHeight}"/>
        <Setter Property="MinWidth" Value="{StaticResource MainContentMinWidth}"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
    </Style>

    <Style x:Key="BackButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="{StaticResource BackButtonWidth}"/>
        <Setter Property="Margin" Value="{StaticResource BackButtonMargin}"/>
    </Style>

    <Style x:Key="CoinDetailsHeader" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="Margin" Value="{StaticResource CoinDetailsHeaderMargin}"/>
    </Style>

    <Style x:Key="CoinDetailsImage" TargetType="Image" BasedOn="{StaticResource BaseImage}">
        <Setter Property="Width" Value="{StaticResource CoinDetailsImageSize}"/>
        <Setter Property="Height" Value="{StaticResource CoinDetailsImageSize}"/>
        <Setter Property="Margin" Value="{StaticResource CoinDetailsImageMargin}"/>
    </Style>

    <Style x:Key="CoinDetailsInfo" TargetType="StackPanel">
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="CoinNameText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource CoinNameFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="CoinSymbolText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource CoinSymbolFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextForeground}"/>
    </Style>

    <Style x:Key="MarketDataGrid" TargetType="UniformGrid">
        <Setter Property="Columns" Value="3"/>
        <Setter Property="Margin" Value="{StaticResource MarketDataGridMargin}"/>
    </Style>

    <Style x:Key="MarketDataItem" TargetType="StackPanel">
        <Setter Property="Margin" Value="{StaticResource MarketDataItemMargin}"/>
    </Style>

    <Style x:Key="MarketDataLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="{StaticResource MarketDataLabelMargin}"/>
    </Style>

    <Style x:Key="MarketDataValue" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
    </Style>

    <Style x:Key="ChartControlsPanel" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="Margin" Value="{StaticResource ChartControlsPanelMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="ChartTypeLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Text" Value="Chart Type:"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="{StaticResource ChartTypeLabelMargin}"/>
    </Style>

    <Style x:Key="ChartTypeRadioButton" TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="{StaticResource ChartTypeRadioButtonMargin}"/>
    </Style>

    <Style x:Key="TimeframePanel" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="Margin" Value="{StaticResource TimeframePanelMargin}"/>
    </Style>

    <Style x:Key="TimeframeLabel" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Text" Value="Timeframe:"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="{StaticResource TimeframeLabelMargin}"/>
    </Style>

    <Style x:Key="TimeframeButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="{StaticResource TimeframeButtonMargin}"/>
        <Setter Property="MinWidth" Value="{StaticResource TimeframeButtonMinWidth}"/>
    </Style>

    <Style x:Key="MarketsGroupBox" TargetType="GroupBox">
        <Setter Property="Header" Value="Markets"/>
        <Setter Property="Margin" Value="{StaticResource MarketsGroupBoxMargin}"/>
        <Setter Property="MinHeight" Value="{StaticResource MarketsMinHeight}"/>
        <Setter Property="MaxHeight" Value="{StaticResource MarketsMaxHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBorder}"/>
    </Style>

    <Style x:Key="MarketsHeader" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="Background" Value="{StaticResource MarketsHeaderBackground}"/>
    </Style>

    <Style x:Key="MarketsHeaderText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Foreground" Value="{StaticResource MarketsTextForeground}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="{StaticResource MarketsHeaderTextPadding}"/>
    </Style>

    <Style x:Key="MarketsScrollViewer" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <Style x:Key="MarketItemBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource MarketItemBorderColor}"/>
        <Setter Property="BorderThickness" Value="{StaticResource MarketItemBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource MarketItemBorderPadding}"/>
    </Style>

    <Style x:Key="MarketItemPanel" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="MarketItemText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Foreground" Value="{StaticResource MarketsTextForeground}"/>
    </Style>

    <Style x:Key="MarketOpenLink" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Text" Value="Open"/>
        <Setter Property="Foreground" Value="{StaticResource MarketsTextForeground}"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="ConverterHeader" TargetType="StackPanel">
        <Setter Property="Margin" Value="{StaticResource ConverterHeaderMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ConverterTitleText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource ConverterTitleFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource ConverterTitleMargin}"/>
    </Style>

    <Style x:Key="ConverterSubtitleText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource ConverterSubtitleFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextForeground}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource ConverterSubtitleMargin}"/>
    </Style>

    <Style x:Key="ConverterMainGrid" TargetType="Grid">
        <Setter Property="Margin" Value="{StaticResource ConverterMainGridMargin}"/>
    </Style>

    <Style x:Key="FromCurrencyPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="{StaticResource CurrencyPanelMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="ToCurrencyPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="{StaticResource CurrencyPanelMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="CurrencyLabelText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="{StaticResource CurrencyLabelMargin}"/>
    </Style>

    <Style x:Key="CurrencyComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBorder}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource ComboBoxPadding}"/>
        <Setter Property="Margin" Value="{StaticResource ComboBoxMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="Border"
                                            Background="{StaticResource SecondaryBackground}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter x:Name="ContentSite"
                                                              Grid.Column="0"
                                                              IsHitTestVisible="False"
                                                              Content="{Binding Path=SelectionBoxItem, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              ContentTemplate="{Binding Path=SelectionBoxItemTemplate, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              ContentTemplateSelector="{Binding Path=ItemTemplateSelector, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              Margin="{Binding Path=Padding, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                            <Path x:Name="Arrow"
                                                  Grid.Column="1"
                                                  Fill="{StaticResource PrimaryForeground}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="0,0,8,0"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPressedBackground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{DynamicResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Margin="{TemplateBinding Padding}"
                                 Focusable="True"
                                 Background="Transparent"
                                 Foreground="{TemplateBinding Foreground}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource SecondaryBackground}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource PrimaryBorder}"
                                        CornerRadius="4"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                                         </Grid>
                     <ControlTemplate.Triggers>
                         <Trigger Property="HasItems" Value="false">
                             <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                         </Trigger>
                         <Trigger Property="IsGrouping" Value="true">
                             <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                         </Trigger>
                         <Trigger Property="IsEditable" Value="true">
                             <Setter Property="IsTabStop" Value="false"/>
                             <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                             <Setter TargetName="ToggleButton" Property="Visibility" Value="Hidden"/>
                         </Trigger>
                     </ControlTemplate.Triggers>
                 </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CurrencyItemPanel" TargetType="StackPanel" BasedOn="{StaticResource BaseStackPanel}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="CurrencyItemIcon" TargetType="Image" BasedOn="{StaticResource BaseImage}">
        <Setter Property="Width" Value="{StaticResource CurrencyItemIconSize}"/>
        <Setter Property="Height" Value="{StaticResource CurrencyItemIconSize}"/>
        <Setter Property="Margin" Value="{StaticResource CurrencyItemIconMargin}"/>
    </Style>

    <Style x:Key="CurrencyItemName" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="{StaticResource CurrencyItemNameMargin}"/>
    </Style>

    <Style x:Key="CurrencyItemSymbol" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="Margin" Value="{StaticResource CurrencyItemSymbolMargin}"/>
    </Style>

    <Style x:Key="CurrencyComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AmountTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Margin" Value="{StaticResource AmountTextBoxMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource AmountTextBoxFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="SwitchButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="{StaticResource SwitchButtonSize}"/>
        <Setter Property="Height" Value="{StaticResource SwitchButtonSize}"/>
        <Setter Property="Margin" Value="{StaticResource SwitchButtonMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource SwitchButtonFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ConvertedAmountText" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource ConvertedAmountFontSize}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="{StaticResource ConvertedAmountMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource TertiaryBackground}"/>
        <Setter Property="Padding" Value="{StaticResource ConvertedAmountPadding}"/>
    </Style>



</ResourceDictionary> 