<UserControl x:Class="CryptoCurR.Views.CoinDetailsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:CryptoCurR.Views"
             xmlns:vm="clr-namespace:CryptoCurR.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:lottie="clr-namespace:LottieSharp.WPF;assembly=LottieSharp"
             mc:Ignorable="d">

    <Grid>
        <Grid Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="300"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <Button Content="← Back"
                        Command="{Binding GoBackCommand}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Margin="0,0,20,0"
                        FontWeight="Bold"/>
                <Image Width="64" 
                       Height="64"
                       Source="{Binding CoinDetail.Image.Large}" 
                       Margin="0,0,10,0"/>
                <StackPanel>
                    <TextBlock FontSize="24" 
                               FontWeight="Bold" 
                               Text="{Binding CoinDetail.Name}" />
                    <TextBlock FontSize="14" 
                               Foreground="Gray" 
                               Text="{Binding CoinDetail.Symbol}" />
                </StackPanel>
            </StackPanel>

            <UniformGrid Grid.Row="1" 
                         Columns="3" 
                         Margin="0,0,0,10">
                <StackPanel>
                    <TextBlock Text="Current Price:" 
                               FontWeight="SemiBold" />
                    <TextBlock Text="{Binding CoinDetail.MarketData.CurrentPrice.usd, StringFormat='{}{0:C}'}" />
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="Market Cap:" 
                               FontWeight="SemiBold" />
                    <TextBlock Text="{Binding CoinDetail.MarketData.MarketCap.usd, StringFormat='{}{0:C}'}" />
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="24h Volume:" 
                               FontWeight="SemiBold" />
                    <TextBlock Text="{Binding CoinDetail.MarketData.TotalVolume.usd, StringFormat='{}{0:C}'}" />
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="24h Change:" 
                               FontWeight="SemiBold" />
                    <TextBlock Text="{Binding CoinDetail.MarketData.PriceChangePercentage24h, StringFormat='{}{0:F2}%'}"
                               Foreground="{Binding CoinDetail.MarketData.PriceChangePercentage24h, Converter={StaticResource PriceChangeToBrushConverter}}" />
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="7d Change:" 
                               FontWeight="SemiBold" />
                    <TextBlock Text="{Binding CoinDetail.MarketData.PriceChangePercentage7d, StringFormat='{}{0:F2}%'}"
                               Foreground="{Binding CoinDetail.MarketData.PriceChangePercentage7d, Converter={StaticResource PriceChangeToBrushConverter}}" />
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="Circulating Supply:" 
                               FontWeight="SemiBold" />
                    <TextBlock Text="{Binding CoinDetail.MarketData.CirculatingSupply, StringFormat='{}{0:N0}'}" />
                </StackPanel>
            </UniformGrid>

            <StackPanel Grid.Row="2" 
                        Orientation="Horizontal" 
                        Margin="0,0,0,10" 
                        HorizontalAlignment="Left">
                <TextBlock Text="Chart Type:" 
                           FontWeight="SemiBold" 
                           VerticalAlignment="Center" 
                           Margin="0,0,10,0"/>
                <RadioButton Content="Line" 
                             IsChecked="{Binding IsLineChart}" 
                             GroupName="ChartType" 
                             Margin="0,0,5,0" 
                             Foreground="White"/>
                <RadioButton Content="Candlestick" 
                             IsChecked="{Binding IsCandlestickChart, Mode=OneWay}" 
                             GroupName="ChartType" 
                             Foreground="White"/>
            </StackPanel>

            <StackPanel Grid.Row="2" 
                        Orientation="Horizontal" 
                        Margin="250,0,10,10">
                <TextBlock Text="Timeframe:" 
                           FontWeight="SemiBold" 
                           VerticalAlignment="Center" 
                           Margin="0,0,10,0"/>
                <ItemsControl ItemsSource="{Binding AvailableTimeframes}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding}" 
                                    Margin="2,0"
                                    Command="{Binding DataContext.ChangeTimeframeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}">
                                <Button.Background>
                                    <MultiBinding Converter="{StaticResource TimeframeToBrushMultiConverter}">
                                        <Binding Path="DataContext.SelectedTimeframe" 
                                                 RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                        <Binding />
                                    </MultiBinding>
                                </Button.Background>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>

            <lvc:CartesianChart Grid.Row="3"
                                Visibility="{Binding IsLineChart, Converter={StaticResource BoolToVisConverter}}"
                                Series="{Binding MarketChart, Converter={StaticResource MarketChartConverter}}"
                                Zoom="X"
                                LegendLocation="Right">
                <lvc:CartesianChart.AxisX>
                    <lvc:Axis Title="Time" 
                              LabelFormatter="{Binding DateLabelFormatter}" />
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis Title="Price (USD)" />
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>

            <lvc:CartesianChart Grid.Row="3"
                                Visibility="{Binding IsCandlestickChart, Converter={StaticResource BoolToVisConverter}}"
                                Series="{Binding OhlcCandles, Converter={StaticResource OhlcSeriesConverter}}"
                                Zoom="X"
                                LegendLocation="Right">
                <lvc:CartesianChart.AxisX>
                    <lvc:Axis Title="Time" 
                              LabelFormatter="{Binding OhlcLabelFormatter}" 
                              LabelsRotation="15"/>
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis Title="Price (USD)" />
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>

            <GroupBox Header="Markets" 
                      Grid.Row="4" 
                      Margin="0,10,0,0" 
                      MinHeight="200" 
                      MaxHeight="400">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" 
                                Grid.Row="0" 
                                Background="#222">
                        <TextBlock Text="Market" 
                                   Width="150" 
                                   Foreground="White" 
                                   FontWeight="SemiBold"/>
                        <TextBlock Text="Base" 
                                   Width="50" 
                                   Foreground="White" 
                                   FontWeight="SemiBold"/>
                        <TextBlock Text="Target" 
                                   Width="50" 
                                   Foreground="White" 
                                   FontWeight="SemiBold"/>
                        <TextBlock Text="Last" 
                                   Width="100" 
                                   Foreground="White" 
                                   FontWeight="SemiBold"/>
                        <TextBlock Text="Volume" 
                                   Width="100" 
                                   Foreground="White" 
                                   FontWeight="SemiBold"/>
                        <TextBlock Text="" 
                                   Width="40"/>
                    </StackPanel>

                    <ScrollViewer Grid.Row="1" 
                                  VerticalScrollBarVisibility="Auto" 
                                  HorizontalScrollBarVisibility="Disabled">
                        <ItemsControl ItemsSource="{Binding CoinTickers.Tickers}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="Gray" 
                                            BorderThickness="0 0 0 1" 
                                            Padding="5">
                                        <StackPanel Orientation="Horizontal" 
                                                    HorizontalAlignment="Stretch">
                                            <TextBlock Text="{Binding Market.Name}" 
                                                       Width="150" 
                                                       Foreground="White"/>
                                            <TextBlock Text="{Binding Base}" 
                                                       Width="50" 
                                                       Foreground="White"/>
                                            <TextBlock Text="{Binding Target}" 
                                                       Width="50" 
                                                       Foreground="White"/>
                                            <TextBlock Text="{Binding Last, StringFormat='{}{0:F2}'}" 
                                                       Width="100" 
                                                       Foreground="White"/>
                                            <TextBlock Text="{Binding Volume, StringFormat='{}{0:N0}'}" 
                                                       Width="100" 
                                                       Foreground="White"/>
                                            <TextBlock Width="40" 
                                                       Text="Open" 
                                                       Foreground="White" 
                                                       Cursor="Hand">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.OpenTradeUrlCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                                                              CommandParameter="{Binding TradeUrl}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </GroupBox>
        </Grid>

        <Border Style="{StaticResource LoadingOverlayBorder}"
                Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisConverter}}">
            <lottie:LottieAnimationView
                FileName="Assets\\loading.json"
                Style="{StaticResource LoadingAnimation}"
                AutoPlay="True"/>
        </Border>
    </Grid>
</UserControl>
